name: testing

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        tensorflow-version: [1.15.5, 2.5.0, 2.8.0]
        exclude:
          # TensorFlow 1.15 doesn't support python 3.8 or higher
          - os: ubuntu-latest
            python-version: 3.8
            tensorflow-version: 1.15.5
          - os: windows-latest
            python-version: 3.8
            tensorflow-version: 1.15.5
          - os: macos-latest
            python-version: 3.8
            tensorflow-version: 1.15.5
          - os: ubuntu-latest
            python-version: 3.9
            tensorflow-version: 1.15.5
          - os: windows-latest
            python-version: 3.9
            tensorflow-version: 1.15.5
          - os: macos-latest
            python-version: 3.9
            tensorflow-version: 1.15.5

          # TensorFlow 2.8 doesn't support python 3.6
          - os: ubuntu-latest
            python-version: 3.6
            tensorflow-version: 2.8.0
          - os: windows-latest
            python-version: 3.6
            tensorflow-version: 2.8.0
          - os: macos-latest
            python-version: 3.6
            tensorflow-version: 2.8.0

        include:
          # TensorFlow 2.8 starts to support python 3.10
          - os: ubuntu-latest
            python-version: 3.10
            tensorflow-version: 2.8.0
          - os: windows-latest
            python-version: 3.10
            tensorflow-version: 2.8.0
          - os: macos-latest
            python-version: 3.10
            tensorflow-version: 2.8.0

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # exclude TensorFlow in requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install $(sed "/tensorflow*/d" requirements.txt)
          python -m pip install -q tensorflow==${{ matrix.tensorflow-version }}
          python -m pip install -e .

      - name: Lint with flake8
        run: |
          python -m pip install flake8
          flake8  --count --show-source --statistics --max-line-length=120 --ignore=F811,F401,W503,W504 libreco/ tests/ examples/
      - name: Test with pytest
        run: |
          python -m pip install pytest pytest-cov
          python -m pytest tests --cov=libreco --cov-report=xml --cov-report=term-missing
